#
# MIT License
#
# (C) Copyright 2020-2024 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#

{{- if .Values.security.keycloak.enabled }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "cray-nexus.fullname" . }}-secret-check
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "cray-nexus.labels" . | indent 4 }}
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation, hook-succeeded
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: "{{ .Values.hooks.preInstall.serviceAccountName }}"
      restartPolicy: Never
      containers:
        - name: secret-check
          image: "{{ .Values.hooks.preInstall.image.repository }}:{{ .Values.hooks.preInstall.image.tag }}"
          imagePullPolicy: "{{ .Values.hooks.preInstall.image.pullPolicy }}"
          command:
          - /bin/sh
          - -c
          - |-
            set -x

            echo "Looking for secret {{ .Values.security.keycloak.client.secret.name }} ..."
            # Wait for secret to exist in nexus namespace
            while ! kubectl get secrets -n {{ .Release.Namespace }} {{ .Values.security.keycloak.client.secret.name }} >/dev/null; do
                echo >&2 "Looking for secret {{ .Values.security.keycloak.client.secret.name }} again in 10 seconds."
                sleep 10
            done
            echo "Found secret {{ .Values.security.keycloak.client.secret.name }}!"

{{- end }}
{{- if .Values.setup.enabled }}
{{- if .Values.setup.adminCredential.enabled }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "cray-nexus.fullname" . }}-set-admin-password
  labels:
    nexus: setup
{{ include "cray-nexus.labels" . | indent 4 }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "-100"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      name: {{ template "cray-nexus.fullname" . }}-init
      labels:
{{ include "cray-nexus.labels" . | indent 8 }}
    spec:
      restartPolicy: Never
      containers:
        - name: main
          image: "{{ .Values.setup.image.repository }}:{{ .Values.setup.image.tag }}"
          imagePullPolicy: "{{ .Values.setup.image.pullPolicy }}"
          env:
          - name: NEXUS_URL
            value: http://nexus
          - name: NEXUS_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.setup.adminCredential.secret }}"
                key: password
          command:
          - /bin/bash
          - -c
          - |-
            set -x

            # Wait for Nexus to be available
            while ! nexus-ready; do
                echo >&2 "Trying again in 10 seconds"
                sleep 10
            done

            set -e

            . "$(command -v nexus-ready)"

            # Change default admin password, as necessary
            if curl -sfk "${URL}/v1/status/check"; then
                echo "$NEXUS_ADMIN_PASSWORD" | nexus-change-password admin >&2
            fi

{{- end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "cray-nexus.fullname" . }}-init
  labels:
    nexus: setup
{{ include "cray-nexus.labels" . | indent 4 }}
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: "-10"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      name: {{ template "cray-nexus.fullname" . }}-init
      labels:
{{ include "cray-nexus.labels" . | indent 8 }}
    spec:
      restartPolicy: Never
      containers:
        - name: main
          image: "{{ .Values.setup.image.repository }}:{{ .Values.setup.image.tag }}"
          imagePullPolicy: "{{ .Values.setup.image.pullPolicy }}"
          env:
          - name: NEXUS_URL
            value: http://nexus
          {{- if .Values.setup.adminCredential.enabled }}
          - name: NEXUS_USERNAME
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.setup.adminCredential.secret }}"
                key: username
          - name: NEXUS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.setup.adminCredential.secret }}"
                key: password
          {{- end }}

          command:
          - /bin/bash
          - -c
          - |-
            set -x

            # Wait for Nexus to be available
            while ! nexus-ready; do
                echo >&2 "Trying again in 10 seconds"
                sleep 10
            done

            set -e

            . "$(command -v nexus-ready)"

            nexus-remove-default-repos >&2

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "cray-nexus.fullname" . }}-setup
  labels:
    nexus: setup
{{ include "cray-nexus.labels" . | indent 4 }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      name: {{ template "cray-nexus.fullname" . }}-setup
      labels:
{{ include "cray-nexus.labels" . | indent 8 }}
    spec:
      restartPolicy: Never
      containers:
        - name: main
          image: "{{ .Values.setup.image.repository }}:{{ .Values.setup.image.tag }}"
          imagePullPolicy: "{{ .Values.setup.image.pullPolicy }}"
          env:
          - name: NEXUS_URL
            value: http://nexus
          {{- if .Values.setup.adminCredential.enabled }}
          - name: NEXUS_USERNAME
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.setup.adminCredential.secret }}"
                key: username
          - name: NEXUS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.setup.adminCredential.secret }}"
                key: password
          {{- end }}
          command:
          - /bin/bash
          - -c
          - |-
            set -x

            # Wait for Nexus to be available
            while ! nexus-ready; do
                echo >&2 "Trying again in 10 seconds"
                sleep 10
            done

            set -e

            . "$(command -v nexus-ready)"

            nexus-upload-script /usr/local/share/nexus-setup/groovy/*.groovy >&2

            {{- if .Values.security.keycloak.enabled }}
            nexus-enable-keycloak-realm >&2
            {{- else }}
            nexus-disable-keycloak-realm >&2
            {{- end }}

            {{- if .Values.security.docker.enabled }}
            nexus-enable-docker-realm >&2
            {{- else }}
            nexus-disable-docker-realm >&2
            {{- end }}

            {{- if .Values.security.rutAuth.enabled }}
            nexus-enable-rut-auth {{ .Values.security.rutAuth.httpHeader | quote }} >&2
            {{- else }}
            nexus-disable-rut-auth >&2
            {{- end }}

            {{- if .Values.security.anonymousAccess.enabled }}
            nexus-enable-anonymous-access >&2
            {{- else }}
            nexus-disable-anonymous-access >&2
            {{- end }}
{{- end }}
